// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/step_stats.proto

package org.tensorflow.framework;

/**
 * Protobuf type {@code tensorflow.AllocationRecord}
 *
 * <pre>
 * An allocation/de-allocation operation performed by the allocator.
 * </pre>
 */
public  final class AllocationRecord extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:tensorflow.AllocationRecord)
    AllocationRecordOrBuilder {
  // Use AllocationRecord.newBuilder() to construct.
  private AllocationRecord(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private AllocationRecord() {
    allocMicros_ = 0L;
    allocBytes_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private AllocationRecord(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            allocMicros_ = input.readInt64();
            break;
          }
          case 16: {

            allocBytes_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.framework.StepStatsProtos.internal_static_tensorflow_AllocationRecord_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.framework.StepStatsProtos.internal_static_tensorflow_AllocationRecord_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.framework.AllocationRecord.class, org.tensorflow.framework.AllocationRecord.Builder.class);
  }

  public static final int ALLOC_MICROS_FIELD_NUMBER = 1;
  private long allocMicros_;
  /**
   * <code>optional int64 alloc_micros = 1;</code>
   *
   * <pre>
   * The timestamp of the operation.
   * </pre>
   */
  public long getAllocMicros() {
    return allocMicros_;
  }

  public static final int ALLOC_BYTES_FIELD_NUMBER = 2;
  private long allocBytes_;
  /**
   * <code>optional int64 alloc_bytes = 2;</code>
   *
   * <pre>
   * Number of bytes allocated, or de-allocated if negative.
   * </pre>
   */
  public long getAllocBytes() {
    return allocBytes_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (allocMicros_ != 0L) {
      output.writeInt64(1, allocMicros_);
    }
    if (allocBytes_ != 0L) {
      output.writeInt64(2, allocBytes_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allocMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, allocMicros_);
    }
    if (allocBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, allocBytes_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.tensorflow.framework.AllocationRecord parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.tensorflow.framework.AllocationRecord parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.tensorflow.framework.AllocationRecord parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.framework.AllocationRecord prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tensorflow.AllocationRecord}
   *
   * <pre>
   * An allocation/de-allocation operation performed by the allocator.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.AllocationRecord)
      org.tensorflow.framework.AllocationRecordOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.StepStatsProtos.internal_static_tensorflow_AllocationRecord_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.StepStatsProtos.internal_static_tensorflow_AllocationRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.AllocationRecord.class, org.tensorflow.framework.AllocationRecord.Builder.class);
    }

    // Construct using org.tensorflow.framework.AllocationRecord.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      allocMicros_ = 0L;

      allocBytes_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.framework.StepStatsProtos.internal_static_tensorflow_AllocationRecord_descriptor;
    }

    public org.tensorflow.framework.AllocationRecord getDefaultInstanceForType() {
      return org.tensorflow.framework.AllocationRecord.getDefaultInstance();
    }

    public org.tensorflow.framework.AllocationRecord build() {
      org.tensorflow.framework.AllocationRecord result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.framework.AllocationRecord buildPartial() {
      org.tensorflow.framework.AllocationRecord result = new org.tensorflow.framework.AllocationRecord(this);
      result.allocMicros_ = allocMicros_;
      result.allocBytes_ = allocBytes_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.framework.AllocationRecord) {
        return mergeFrom((org.tensorflow.framework.AllocationRecord)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.framework.AllocationRecord other) {
      if (other == org.tensorflow.framework.AllocationRecord.getDefaultInstance()) return this;
      if (other.getAllocMicros() != 0L) {
        setAllocMicros(other.getAllocMicros());
      }
      if (other.getAllocBytes() != 0L) {
        setAllocBytes(other.getAllocBytes());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.framework.AllocationRecord parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.framework.AllocationRecord) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long allocMicros_ ;
    /**
     * <code>optional int64 alloc_micros = 1;</code>
     *
     * <pre>
     * The timestamp of the operation.
     * </pre>
     */
    public long getAllocMicros() {
      return allocMicros_;
    }
    /**
     * <code>optional int64 alloc_micros = 1;</code>
     *
     * <pre>
     * The timestamp of the operation.
     * </pre>
     */
    public Builder setAllocMicros(long value) {
      
      allocMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 alloc_micros = 1;</code>
     *
     * <pre>
     * The timestamp of the operation.
     * </pre>
     */
    public Builder clearAllocMicros() {
      
      allocMicros_ = 0L;
      onChanged();
      return this;
    }

    private long allocBytes_ ;
    /**
     * <code>optional int64 alloc_bytes = 2;</code>
     *
     * <pre>
     * Number of bytes allocated, or de-allocated if negative.
     * </pre>
     */
    public long getAllocBytes() {
      return allocBytes_;
    }
    /**
     * <code>optional int64 alloc_bytes = 2;</code>
     *
     * <pre>
     * Number of bytes allocated, or de-allocated if negative.
     * </pre>
     */
    public Builder setAllocBytes(long value) {
      
      allocBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 alloc_bytes = 2;</code>
     *
     * <pre>
     * Number of bytes allocated, or de-allocated if negative.
     * </pre>
     */
    public Builder clearAllocBytes() {
      
      allocBytes_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.AllocationRecord)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.AllocationRecord)
  private static final org.tensorflow.framework.AllocationRecord DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.framework.AllocationRecord();
  }

  public static org.tensorflow.framework.AllocationRecord getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllocationRecord>
      PARSER = new com.google.protobuf.AbstractParser<AllocationRecord>() {
    public AllocationRecord parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new AllocationRecord(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<AllocationRecord> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllocationRecord> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.framework.AllocationRecord getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

