// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/step_stats.proto

package org.tensorflow.framework;

public interface AllocatorMemoryUsedOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.AllocatorMemoryUsed)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string allocator_name = 1;</code>
   */
  java.lang.String getAllocatorName();
  /**
   * <code>optional string allocator_name = 1;</code>
   */
  com.google.protobuf.ByteString
      getAllocatorNameBytes();

  /**
   * <code>optional int64 total_bytes = 2;</code>
   *
   * <pre>
   * These are per-node allocator memory stats.
   * </pre>
   */
  long getTotalBytes();

  /**
   * <code>optional int64 peak_bytes = 3;</code>
   */
  long getPeakBytes();

  /**
   * <code>optional int64 live_bytes = 4;</code>
   *
   * <pre>
   * The bytes that are not deallocated.
   * </pre>
   */
  long getLiveBytes();

  /**
   * <code>repeated .tensorflow.AllocationRecord allocation_records = 6;</code>
   *
   * <pre>
   * The allocation and deallocation timeline.
   * </pre>
   */
  java.util.List<org.tensorflow.framework.AllocationRecord> 
      getAllocationRecordsList();
  /**
   * <code>repeated .tensorflow.AllocationRecord allocation_records = 6;</code>
   *
   * <pre>
   * The allocation and deallocation timeline.
   * </pre>
   */
  org.tensorflow.framework.AllocationRecord getAllocationRecords(int index);
  /**
   * <code>repeated .tensorflow.AllocationRecord allocation_records = 6;</code>
   *
   * <pre>
   * The allocation and deallocation timeline.
   * </pre>
   */
  int getAllocationRecordsCount();
  /**
   * <code>repeated .tensorflow.AllocationRecord allocation_records = 6;</code>
   *
   * <pre>
   * The allocation and deallocation timeline.
   * </pre>
   */
  java.util.List<? extends org.tensorflow.framework.AllocationRecordOrBuilder> 
      getAllocationRecordsOrBuilderList();
  /**
   * <code>repeated .tensorflow.AllocationRecord allocation_records = 6;</code>
   *
   * <pre>
   * The allocation and deallocation timeline.
   * </pre>
   */
  org.tensorflow.framework.AllocationRecordOrBuilder getAllocationRecordsOrBuilder(
      int index);

  /**
   * <code>optional int64 allocator_bytes_in_use = 5;</code>
   *
   * <pre>
   * These are snapshots of the overall allocator memory stats.
   * The number of live bytes currently allocated by the allocator.
   * </pre>
   */
  long getAllocatorBytesInUse();
}
