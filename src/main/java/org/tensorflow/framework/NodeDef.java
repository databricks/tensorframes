// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph.proto

package org.tensorflow.framework;

/**
 * Protobuf type {@code tensorflow.NodeDef}
 */
public  final class NodeDef extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:tensorflow.NodeDef)
    NodeDefOrBuilder {
  // Use NodeDef.newBuilder() to construct.
  private NodeDef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NodeDef() {
    name_ = "";
    op_ = "";
    input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    device_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private NodeDef(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            op_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              input_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            input_.add(s);
            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            device_ = s;
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              attr_ = com.google.protobuf.MapField.newMapField(
                  AttrDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.AttrValue>
            attr = input.readMessage(
                AttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            attr_.getMutableMap().put(attr.getKey(), attr.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        input_ = input_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetAttr();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.framework.NodeDef.class, org.tensorflow.framework.NodeDef.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The name given to this operator. Used for naming inputs,
   * logging, visualization, etc.  Unique within a single GraphDef.
   * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
   * </pre>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The name given to this operator. Used for naming inputs,
   * logging, visualization, etc.  Unique within a single GraphDef.
   * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OP_FIELD_NUMBER = 2;
  private volatile java.lang.Object op_;
  /**
   * <code>optional string op = 2;</code>
   *
   * <pre>
   * The operation name.  There may be custom parameters in attrs.
   * Op names starting with an underscore are reserved for internal use.
   * </pre>
   */
  public java.lang.String getOp() {
    java.lang.Object ref = op_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      op_ = s;
      return s;
    }
  }
  /**
   * <code>optional string op = 2;</code>
   *
   * <pre>
   * The operation name.  There may be custom parameters in attrs.
   * Op names starting with an underscore are reserved for internal use.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getOpBytes() {
    java.lang.Object ref = op_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      op_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INPUT_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList input_;
  /**
   * <code>repeated string input = 3;</code>
   *
   * <pre>
   * Each input is "node:src_output" with "node" being a string name and
   * "src_output" indicating which output tensor to use from "node". If
   * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
   * may optionally be followed by control inputs that have the format
   * "^node".
   * </pre>
   */
  public com.google.protobuf.ProtocolStringList
      getInputList() {
    return input_;
  }
  /**
   * <code>repeated string input = 3;</code>
   *
   * <pre>
   * Each input is "node:src_output" with "node" being a string name and
   * "src_output" indicating which output tensor to use from "node". If
   * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
   * may optionally be followed by control inputs that have the format
   * "^node".
   * </pre>
   */
  public int getInputCount() {
    return input_.size();
  }
  /**
   * <code>repeated string input = 3;</code>
   *
   * <pre>
   * Each input is "node:src_output" with "node" being a string name and
   * "src_output" indicating which output tensor to use from "node". If
   * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
   * may optionally be followed by control inputs that have the format
   * "^node".
   * </pre>
   */
  public java.lang.String getInput(int index) {
    return input_.get(index);
  }
  /**
   * <code>repeated string input = 3;</code>
   *
   * <pre>
   * Each input is "node:src_output" with "node" being a string name and
   * "src_output" indicating which output tensor to use from "node". If
   * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
   * may optionally be followed by control inputs that have the format
   * "^node".
   * </pre>
   */
  public com.google.protobuf.ByteString
      getInputBytes(int index) {
    return input_.getByteString(index);
  }

  public static final int DEVICE_FIELD_NUMBER = 4;
  private volatile java.lang.Object device_;
  /**
   * <code>optional string device = 4;</code>
   *
   * <pre>
   * A (possibly partial) specification for the device on which this
   * node should be placed.
   * The expected syntax for this string is as follows:
   * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
   * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
   * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
   * CONSTRAINT ::= ("job:" JOB_NAME)
   *              | ("replica:" [1-9][0-9]*)
   *              | ("task:" [1-9][0-9]*)
   *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
   * Valid values for this string include:
   * * "&#64;other/node"                         (colocate with "other/node")
   * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
   * * "/job:worker/gpu:3"                   (partial specification)
   * * ""                                    (no specification)
   * If the constraints do not resolve to a single device (or if this
   * field is empty or not present), the runtime will attempt to
   * choose a device automatically.
   * </pre>
   */
  public java.lang.String getDevice() {
    java.lang.Object ref = device_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      device_ = s;
      return s;
    }
  }
  /**
   * <code>optional string device = 4;</code>
   *
   * <pre>
   * A (possibly partial) specification for the device on which this
   * node should be placed.
   * The expected syntax for this string is as follows:
   * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
   * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
   * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
   * CONSTRAINT ::= ("job:" JOB_NAME)
   *              | ("replica:" [1-9][0-9]*)
   *              | ("task:" [1-9][0-9]*)
   *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
   * Valid values for this string include:
   * * "&#64;other/node"                         (colocate with "other/node")
   * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
   * * "/job:worker/gpu:3"                   (partial specification)
   * * ""                                    (no specification)
   * If the constraints do not resolve to a single device (or if this
   * field is empty or not present), the runtime will attempt to
   * choose a device automatically.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getDeviceBytes() {
    java.lang.Object ref = device_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      device_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ATTR_FIELD_NUMBER = 5;
  private static final class AttrDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, org.tensorflow.framework.AttrValue> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, org.tensorflow.framework.AttrValue>newDefaultInstance(
                org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_AttrEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.tensorflow.framework.AttrValue.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, org.tensorflow.framework.AttrValue> attr_;
  private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.AttrValue>
  internalGetAttr() {
    if (attr_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AttrDefaultEntryHolder.defaultEntry);
   }
    return attr_;
  }
  /**
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   *
   * <pre>
   * Operation-specific graph-construction-time configuration.
   * Note that this should include all attrs defined in the
   * corresponding OpDef, including those with a value matching
   * the default -- this allows the default to change and makes
   * NodeDefs easier to interpret on their own.  However, if
   * an attr with a default is not specified in this list, the
   * default will be used.
   * The "names" (keys) must match the regexp "[a-z][a-z0-9_]+" (and
   * one of the names from the corresponding OpDef's attr field).
   * The values must have a type matching the corresponding OpDef
   * attr's type field.
   * TODO(josh11b): Add some examples here showing best practices.
   * </pre>
   */

  public java.util.Map<java.lang.String, org.tensorflow.framework.AttrValue> getAttr() {
    return internalGetAttr().getMap();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (!getOpBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, op_);
    }
    for (int i = 0; i < input_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, input_.getRaw(i));
    }
    if (!getDeviceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, device_);
    }
    for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.AttrValue> entry
         : internalGetAttr().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.AttrValue>
      attr = AttrDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(5, attr);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (!getOpBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, op_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < input_.size(); i++) {
        dataSize += computeStringSizeNoTag(input_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getInputList().size();
    }
    if (!getDeviceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, device_);
    }
    for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.AttrValue> entry
         : internalGetAttr().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.AttrValue>
      attr = AttrDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, attr);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static org.tensorflow.framework.NodeDef parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.tensorflow.framework.NodeDef parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.tensorflow.framework.NodeDef parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.tensorflow.framework.NodeDef parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.framework.NodeDef prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tensorflow.NodeDef}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.NodeDef)
      org.tensorflow.framework.NodeDefOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetAttr();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableAttr();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.NodeDef.class, org.tensorflow.framework.NodeDef.Builder.class);
    }

    // Construct using org.tensorflow.framework.NodeDef.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      op_ = "";

      input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      device_ = "";

      internalGetMutableAttr().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.framework.GraphProtos.internal_static_tensorflow_NodeDef_descriptor;
    }

    public org.tensorflow.framework.NodeDef getDefaultInstanceForType() {
      return org.tensorflow.framework.NodeDef.getDefaultInstance();
    }

    public org.tensorflow.framework.NodeDef build() {
      org.tensorflow.framework.NodeDef result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.framework.NodeDef buildPartial() {
      org.tensorflow.framework.NodeDef result = new org.tensorflow.framework.NodeDef(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.name_ = name_;
      result.op_ = op_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        input_ = input_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.input_ = input_;
      result.device_ = device_;
      result.attr_ = internalGetAttr();
      result.attr_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.framework.NodeDef) {
        return mergeFrom((org.tensorflow.framework.NodeDef)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.framework.NodeDef other) {
      if (other == org.tensorflow.framework.NodeDef.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getOp().isEmpty()) {
        op_ = other.op_;
        onChanged();
      }
      if (!other.input_.isEmpty()) {
        if (input_.isEmpty()) {
          input_ = other.input_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureInputIsMutable();
          input_.addAll(other.input_);
        }
        onChanged();
      }
      if (!other.getDevice().isEmpty()) {
        device_ = other.device_;
        onChanged();
      }
      internalGetMutableAttr().mergeFrom(
          other.internalGetAttr());
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.framework.NodeDef parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.framework.NodeDef) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The name given to this operator. Used for naming inputs,
     * logging, visualization, etc.  Unique within a single GraphDef.
     * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The name given to this operator. Used for naming inputs,
     * logging, visualization, etc.  Unique within a single GraphDef.
     * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The name given to this operator. Used for naming inputs,
     * logging, visualization, etc.  Unique within a single GraphDef.
     * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
     * </pre>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The name given to this operator. Used for naming inputs,
     * logging, visualization, etc.  Unique within a single GraphDef.
     * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
     * </pre>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The name given to this operator. Used for naming inputs,
     * logging, visualization, etc.  Unique within a single GraphDef.
     * Must match the regexp "[A-Za-z0-9.][A-Za-z0-9_./]*".
     * </pre>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object op_ = "";
    /**
     * <code>optional string op = 2;</code>
     *
     * <pre>
     * The operation name.  There may be custom parameters in attrs.
     * Op names starting with an underscore are reserved for internal use.
     * </pre>
     */
    public java.lang.String getOp() {
      java.lang.Object ref = op_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        op_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string op = 2;</code>
     *
     * <pre>
     * The operation name.  There may be custom parameters in attrs.
     * Op names starting with an underscore are reserved for internal use.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOpBytes() {
      java.lang.Object ref = op_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        op_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string op = 2;</code>
     *
     * <pre>
     * The operation name.  There may be custom parameters in attrs.
     * Op names starting with an underscore are reserved for internal use.
     * </pre>
     */
    public Builder setOp(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string op = 2;</code>
     *
     * <pre>
     * The operation name.  There may be custom parameters in attrs.
     * Op names starting with an underscore are reserved for internal use.
     * </pre>
     */
    public Builder clearOp() {
      
      op_ = getDefaultInstance().getOp();
      onChanged();
      return this;
    }
    /**
     * <code>optional string op = 2;</code>
     *
     * <pre>
     * The operation name.  There may be custom parameters in attrs.
     * Op names starting with an underscore are reserved for internal use.
     * </pre>
     */
    public Builder setOpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      op_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureInputIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        input_ = new com.google.protobuf.LazyStringArrayList(input_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getInputList() {
      return input_.getUnmodifiableView();
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public int getInputCount() {
      return input_.size();
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public java.lang.String getInput(int index) {
      return input_.get(index);
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInputBytes(int index) {
      return input_.getByteString(index);
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public Builder setInput(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInputIsMutable();
      input_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public Builder addInput(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureInputIsMutable();
      input_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public Builder addAllInput(
        java.lang.Iterable<java.lang.String> values) {
      ensureInputIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, input_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public Builder clearInput() {
      input_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string input = 3;</code>
     *
     * <pre>
     * Each input is "node:src_output" with "node" being a string name and
     * "src_output" indicating which output tensor to use from "node". If
     * "src_output" is 0 the ":0" suffix can be omitted.  Regular inputs
     * may optionally be followed by control inputs that have the format
     * "^node".
     * </pre>
     */
    public Builder addInputBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureInputIsMutable();
      input_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object device_ = "";
    /**
     * <code>optional string device = 4;</code>
     *
     * <pre>
     * A (possibly partial) specification for the device on which this
     * node should be placed.
     * The expected syntax for this string is as follows:
     * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
     * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
     * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
     * CONSTRAINT ::= ("job:" JOB_NAME)
     *              | ("replica:" [1-9][0-9]*)
     *              | ("task:" [1-9][0-9]*)
     *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
     * Valid values for this string include:
     * * "&#64;other/node"                         (colocate with "other/node")
     * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
     * * "/job:worker/gpu:3"                   (partial specification)
     * * ""                                    (no specification)
     * If the constraints do not resolve to a single device (or if this
     * field is empty or not present), the runtime will attempt to
     * choose a device automatically.
     * </pre>
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        device_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string device = 4;</code>
     *
     * <pre>
     * A (possibly partial) specification for the device on which this
     * node should be placed.
     * The expected syntax for this string is as follows:
     * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
     * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
     * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
     * CONSTRAINT ::= ("job:" JOB_NAME)
     *              | ("replica:" [1-9][0-9]*)
     *              | ("task:" [1-9][0-9]*)
     *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
     * Valid values for this string include:
     * * "&#64;other/node"                         (colocate with "other/node")
     * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
     * * "/job:worker/gpu:3"                   (partial specification)
     * * ""                                    (no specification)
     * If the constraints do not resolve to a single device (or if this
     * field is empty or not present), the runtime will attempt to
     * choose a device automatically.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string device = 4;</code>
     *
     * <pre>
     * A (possibly partial) specification for the device on which this
     * node should be placed.
     * The expected syntax for this string is as follows:
     * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
     * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
     * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
     * CONSTRAINT ::= ("job:" JOB_NAME)
     *              | ("replica:" [1-9][0-9]*)
     *              | ("task:" [1-9][0-9]*)
     *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
     * Valid values for this string include:
     * * "&#64;other/node"                         (colocate with "other/node")
     * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
     * * "/job:worker/gpu:3"                   (partial specification)
     * * ""                                    (no specification)
     * If the constraints do not resolve to a single device (or if this
     * field is empty or not present), the runtime will attempt to
     * choose a device automatically.
     * </pre>
     */
    public Builder setDevice(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      device_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string device = 4;</code>
     *
     * <pre>
     * A (possibly partial) specification for the device on which this
     * node should be placed.
     * The expected syntax for this string is as follows:
     * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
     * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
     * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
     * CONSTRAINT ::= ("job:" JOB_NAME)
     *              | ("replica:" [1-9][0-9]*)
     *              | ("task:" [1-9][0-9]*)
     *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
     * Valid values for this string include:
     * * "&#64;other/node"                         (colocate with "other/node")
     * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
     * * "/job:worker/gpu:3"                   (partial specification)
     * * ""                                    (no specification)
     * If the constraints do not resolve to a single device (or if this
     * field is empty or not present), the runtime will attempt to
     * choose a device automatically.
     * </pre>
     */
    public Builder clearDevice() {
      
      device_ = getDefaultInstance().getDevice();
      onChanged();
      return this;
    }
    /**
     * <code>optional string device = 4;</code>
     *
     * <pre>
     * A (possibly partial) specification for the device on which this
     * node should be placed.
     * The expected syntax for this string is as follows:
     * DEVICE_SPEC ::= COLOCATED_NODE | PARTIAL_SPEC
     * COLOCATED_NODE ::= "&#64;" NODE_NAME  // See NodeDef.name above.
     * PARTIAL_SPEC ::= ("/" CONSTRAINT) *
     * CONSTRAINT ::= ("job:" JOB_NAME)
     *              | ("replica:" [1-9][0-9]*)
     *              | ("task:" [1-9][0-9]*)
     *              | ( ("gpu" | "cpu") ":" ([1-9][0-9]* | "*") )
     * Valid values for this string include:
     * * "&#64;other/node"                         (colocate with "other/node")
     * * "/job:worker/replica:0/task:1/gpu:3"  (full specification)
     * * "/job:worker/gpu:3"                   (partial specification)
     * * ""                                    (no specification)
     * If the constraints do not resolve to a single device (or if this
     * field is empty or not present), the runtime will attempt to
     * choose a device automatically.
     * </pre>
     */
    public Builder setDeviceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      device_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.framework.AttrValue> attr_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.AttrValue>
    internalGetAttr() {
      if (attr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttrDefaultEntryHolder.defaultEntry);
     }
      return attr_;
    }
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.AttrValue>
    internalGetMutableAttr() {
      onChanged();;
      if (attr_ == null) {
        attr_ = com.google.protobuf.MapField.newMapField(
            AttrDefaultEntryHolder.defaultEntry);
      }
      if (!attr_.isMutable()) {
        attr_ = attr_.copy();
      }
      return attr_;
    }
    /**
     * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
     *
     * <pre>
     * Operation-specific graph-construction-time configuration.
     * Note that this should include all attrs defined in the
     * corresponding OpDef, including those with a value matching
     * the default -- this allows the default to change and makes
     * NodeDefs easier to interpret on their own.  However, if
     * an attr with a default is not specified in this list, the
     * default will be used.
     * The "names" (keys) must match the regexp "[a-z][a-z0-9_]+" (and
     * one of the names from the corresponding OpDef's attr field).
     * The values must have a type matching the corresponding OpDef
     * attr's type field.
     * TODO(josh11b): Add some examples here showing best practices.
     * </pre>
     */
    public java.util.Map<java.lang.String, org.tensorflow.framework.AttrValue> getAttr() {
      return internalGetAttr().getMap();
    }
    /**
     * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
     *
     * <pre>
     * Operation-specific graph-construction-time configuration.
     * Note that this should include all attrs defined in the
     * corresponding OpDef, including those with a value matching
     * the default -- this allows the default to change and makes
     * NodeDefs easier to interpret on their own.  However, if
     * an attr with a default is not specified in this list, the
     * default will be used.
     * The "names" (keys) must match the regexp "[a-z][a-z0-9_]+" (and
     * one of the names from the corresponding OpDef's attr field).
     * The values must have a type matching the corresponding OpDef
     * attr's type field.
     * TODO(josh11b): Add some examples here showing best practices.
     * </pre>
     */
    public java.util.Map<java.lang.String, org.tensorflow.framework.AttrValue>
    getMutableAttr() {
      return internalGetMutableAttr().getMutableMap();
    }
    /**
     * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
     *
     * <pre>
     * Operation-specific graph-construction-time configuration.
     * Note that this should include all attrs defined in the
     * corresponding OpDef, including those with a value matching
     * the default -- this allows the default to change and makes
     * NodeDefs easier to interpret on their own.  However, if
     * an attr with a default is not specified in this list, the
     * default will be used.
     * The "names" (keys) must match the regexp "[a-z][a-z0-9_]+" (and
     * one of the names from the corresponding OpDef's attr field).
     * The values must have a type matching the corresponding OpDef
     * attr's type field.
     * TODO(josh11b): Add some examples here showing best practices.
     * </pre>
     */
    public Builder putAllAttr(
        java.util.Map<java.lang.String, org.tensorflow.framework.AttrValue> values) {
      getMutableAttr().putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.NodeDef)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.NodeDef)
  private static final org.tensorflow.framework.NodeDef DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.framework.NodeDef();
  }

  public static org.tensorflow.framework.NodeDef getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NodeDef>
      PARSER = new com.google.protobuf.AbstractParser<NodeDef>() {
    public NodeDef parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new NodeDef(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<NodeDef> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NodeDef> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.framework.NodeDef getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

